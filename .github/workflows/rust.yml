name: Build & Release

on: [push, pull_request]

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        platform: [linux, windows, macos]
        include:
          - platform: linux
            os: ubuntu-latest
            artifact_name: gyromouse
            asset_name: gyromouse-linux
            release_name: gyromouse-linux.7z

          - platform: windows
            os: windows-latest
            artifact_name: gyromouse.exe
            asset_name: gyromouse-windows
            release_name: gyromouse-windows.7z

          - platform: macos
            os: macos-latest
            artifact_name: gyromouse
            asset_name: gyromouse-macos
            release_name: gyromouse-macos.7z

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/cache@v2
        id: cache-cargo
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target
          key: ${{ runner.os }}-cargo-v1-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/cache@v2
        id: cache-cargo-bin
        with:
          path: |
            ~/.cargo/bin/
          key: ${{ runner.os }}-cargo-bin-v1

      - name: ‚öôÔ∏è Install cargo-vcpkg
        run: cargo vcpkg --version || cargo install cargo-vcpkg
      # Ubuntu build deps for SDL
      # https://hg.libsdl.org/SDL/file/default/docs/README-linux.md
      - name: ‚öôÔ∏è Install OS dependencies
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install build-essential git make cmake autoconf automake \
          libtool pkg-config libasound2-dev libpulse-dev libaudio-dev libjack-dev \
          libx11-dev libxext-dev libxrandr-dev libxcursor-dev libxi-dev \
          libxinerama-dev libxxf86vm-dev libxss-dev libgl1-mesa-dev libdbus-1-dev \
          libudev-dev libgles2-mesa-dev libegl1-mesa-dev libibus-1.0-dev \
          fcitx-libs-dev libsamplerate0-dev libsndio-dev libwayland-dev \
          libxkbcommon-dev libdrm-dev libgbm-dev \
          \
          libusb-1.0-0-dev libxdo-dev libbluetooth-dev libudev-dev

      - name: üî® Build SDL
        uses: actions-rs/cargo@v1
        with:
          command: vcpkg
          args: --verbose build
      #- name: dbg sdl
      #  if: matrix.platform == 'linux'
      #  run: |
      #    cp -f target/vcpkg/installed/x64-linux/*/lib/libSDL2d.a target/vcpkg/installed/x64-linux/lib/libSDL2.a
      #    cp -f target/vcpkg/installed/x64-linux/*/lib/libSDL2maind.a target/vcpkg/installed/x64-linux/lib/libSDL2main.a
      #  continue-on-error: true

      - name: üî® Build gyromouse
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --release --no-default-features --features sdl2-static

      - name: ‚òÅÔ∏è Upload gyromouse
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.asset_name }}
          path: target/release/${{ matrix.artifact_name }}

      - name: ‚öôÔ∏è Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚öôÔ∏è Prepare Release archives
        run: |
          cd target/release
          7z a ${{ matrix.release_name }} ${{ matrix.artifact_name }}

      - name: ‚òÅÔ∏è Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          body: ${{steps.github_release.outputs.changelog}}
          token: ${{ secrets.GITHUB_TOKEN }}
